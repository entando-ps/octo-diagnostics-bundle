{"version":3,"sources":["App.js","WidgetElement.js"],"names":["App","props","state","appName","logoUrl","themeColor","themeSecondaryColor","value","this","setState","prevState","htmlFor","style","display","id","type","onChange","e","handleAppNameChange","target","handleLogoUrlChange","handleThemeColorChange","handleThemeSecondaryColorChange","React","Component","WidgetElement","reactRootRef","createRef","mountPoint","document","createElement","appendChild","ReactDOM","render","ref","current","HTMLElement","customElements","define"],"mappings":"+RAoEeA,E,kDAjEb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,QAAS,GACTC,QAAS,GACTC,WAAY,UACZC,oBAAsB,WANP,E,gEAUCC,GAClBC,KAAKC,UAAS,SAAAC,GAAS,kCAClBA,GADkB,IAErBP,QAASI,S,0CAIOA,GAClBC,KAAKC,UAAS,SAAAC,GAAS,kCAClBA,GADkB,IAErBN,QAASG,S,6CAIUA,GACrBC,KAAKC,UAAS,SAAAC,GAAS,kCAClBA,GADkB,IAErBL,WAAYE,S,sDAIgBA,GAC9BC,KAAKC,UAAS,SAAAC,GAAS,kCAClBA,GADkB,IAErBJ,oBAAqBC,S,+BAKf,IAAD,SACqDC,KAAKN,MAA1DC,EADA,EACAA,QAASC,EADT,EACSA,QAASC,EADlB,EACkBA,WAAYC,EAD9B,EAC8BA,oBACrC,OACE,6BACE,qEACA,6BACE,2BAAOK,QAAQ,UAAUC,MAAO,CAACC,QAAS,UAA1C,YACA,2BAAOC,GAAI,UAAWC,KAAM,OAAQR,MAAOJ,EAASa,SAAU,SAAAC,GAAC,OAAI,EAAKC,oBAAoBD,EAAEE,OAAOZ,WAEvG,6BACE,2BAAOI,QAAQ,UAAUC,MAAO,CAACC,QAAS,UAA1C,YACA,2BAAOC,GAAI,UAAWC,KAAM,OAAQR,MAAOH,EAASY,SAAU,SAAAC,GAAC,OAAI,EAAKG,oBAAoBH,EAAEE,OAAOZ,WAEvG,6BACE,2BAAOI,QAAQ,aAAaC,MAAO,CAACC,QAAS,UAA7C,eACA,2BAAOC,GAAI,aAAcC,KAAM,OAAQR,MAAOF,EAAYW,SAAU,SAAAC,GAAC,OAAI,EAAKI,uBAAuBJ,EAAEE,OAAOZ,WAEhH,6BACE,2BAAOI,QAAQ,sBAAsBC,MAAO,CAACC,QAAS,UAAtD,yBACA,2BAAOC,GAAI,sBAAuBC,KAAM,OAAQR,MAAOD,EAAqBU,SAAU,SAAAC,GAAC,OAAI,EAAKK,gCAAgCL,EAAEE,iB,GA3D1HI,IAAMC,WCElBC,E,kDACJ,aAAe,IAAD,8BACZ,gBACKC,aAAeH,IAAMI,YAC1B,EAAKC,WAAa,KAHN,E,gEAeZpB,KAAKoB,WAAaC,SAASC,cAAc,OACzCtB,KAAKuB,YAAYvB,KAAKoB,YACtBI,IAASC,OAAO,kBAAC,EAAD,CAAKC,IAAK1B,KAAKkB,eAAkBlB,KAAKoB,c,6BAVtD,OAAOpB,KAAKkB,aAAaS,QAAU3B,KAAKkB,aAAaS,QAAQjC,MAAQ,I,aAG5DK,GACT,OAAOC,KAAKkB,aAAaS,QAAQ1B,SAASF,O,eAZlB6B,cAsB5BC,eAAeC,OAAO,0BAA2Bb,K","file":"static/js/main.674b73ff.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      appName: \"\",\r\n      logoUrl: \"\",\r\n      themeColor: \"#000000\",\r\n      themeSecondaryColor : \"#ffffff\",\r\n    };\r\n  }\r\n\r\n  handleAppNameChange(value) {\r\n    this.setState(prevState => ({\r\n      ...prevState,\r\n      appName: value,\r\n    }));\r\n  }\r\n\r\n  handleLogoUrlChange(value) {\r\n    this.setState(prevState => ({\r\n      ...prevState,\r\n      logoUrl: value,\r\n    }));\r\n  }\r\n\r\n  handleThemeColorChange(value) {\r\n    this.setState(prevState => ({\r\n      ...prevState,\r\n      themeColor: value,\r\n    }));\r\n  }\r\n\r\n  handleThemeSecondaryColorChange(value) {\r\n    this.setState(prevState => ({\r\n      ...prevState,\r\n      themeSecondaryColor: value,\r\n    }));\r\n  }\r\n\r\n\r\n  render() {\r\n    const {appName, logoUrl, themeColor, themeSecondaryColor} = this.state;\r\n    return (\r\n      <div>\r\n        <h1>User Diagnostics Widget Configuration</h1>\r\n        <div>\r\n          <label htmlFor=\"appName\" style={{display: \"block\"}}>App Name</label>\r\n          <input id={\"appName\"} type={\"text\"} value={appName} onChange={e => this.handleAppNameChange(e.target.value)}/>\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"logoUrl\" style={{display: \"block\"}}>URL logo</label>\r\n          <input id={\"logoUrl\"} type={\"text\"} value={logoUrl} onChange={e => this.handleLogoUrlChange(e.target.value)}/>\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"themeColor\" style={{display: \"block\"}}>Theme color</label>\r\n          <input id={\"themeColor\"} type={\"text\"} value={themeColor} onChange={e => this.handleThemeColorChange(e.target.value)}/>\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"themeSecondaryColor\" style={{display: \"block\"}}>Theme secondary color</label>\r\n          <input id={\"themeSecondaryColor\"} type={\"text\"} value={themeSecondaryColor} onChange={e => this.handleThemeSecondaryColorChange(e.target)}/>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nclass WidgetElement extends HTMLElement {\r\n  constructor() {\r\n    super();\r\n    this.reactRootRef = React.createRef();\r\n    this.mountPoint = null;\r\n  }\r\n\r\n  get config() {\r\n    return this.reactRootRef.current ? this.reactRootRef.current.state : {};\r\n  }\r\n\r\n  set config(value) {\r\n    return this.reactRootRef.current.setState(value);\r\n  }\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.appendChild(this.mountPoint);\r\n    ReactDOM.render(<App ref={this.reactRootRef} />, this.mountPoint);\r\n  }\r\n}\r\n\r\ncustomElements.define('card-diagnostics-config', WidgetElement);\r\n\r\nexport default WidgetElement;\r\n"],"sourceRoot":""}